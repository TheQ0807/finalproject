package com.ese.controller.notice;

import java.io.File;
import java.io.IOException;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import com.ese.service.notice.DownloadNoticeService;
import com.ese.vo.forms.DownloadNoticeBoardForm;
import com.ese.vo.notice.DownloadNotice;

@Controller
@RequestMapping("/notice/download")
public class DownloadNoticeController {
	@Value("${file.upload.directory.attached}")
	public String uploadDirectory;
	
	@Autowired
	DownloadNoticeService downloadNoticeService;
	
	@RequestMapping("/list.do")
	public String list(Model model) {
		model.addAttribute("boards", downloadNoticeService.getAllBoards());
		return "/manage/notice/download/list";
	}
	@RequestMapping("/add.do")
	public String addBoard(DownloadNoticeBoardForm downloadNoticeBoardForm) throws IOException {
		
		DownloadNotice downloadNotice = new DownloadNotice();
		BeanUtils.copyProperties(downloadNoticeBoardForm, downloadNotice);
		
		MultipartFile attachfile = downloadNoticeBoardForm.getAttachFile();
		if (!attachfile.isEmpty()) {
			String filename = System.currentTimeMillis() + attachfile.getOriginalFilename();
			downloadNotice.getAttachFile().setName(filename);
			
			FileCopyUtils.copy(attachfile.getBytes(), new File(uploadDirectory, filename));
		}
		
		downloadNoticeService.addBoard(downloadNotice);
		return "redirect:list.do";
	}
}
